@using ElectroDocument.Controllers.AppContext;
@using Microsoft.EntityFrameworkCore.Metadata;
@using System.Collections;

@{
    ViewData["Title"] = "Создание пользователя";
    IEnumerable<Role> roles = Model.roles;
}

<style>
    .error-message {
        color: red;
        font-weight: bold;
    }
</style>

<h2>Форма создания сотрудника</h2>
<div id="errorContainer"></div>
<form id="employeeForm" action="/Users/Add" onsubmit="return validateForm()" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="Name">Имя <span class="error">*</span></label><br>
        <input type="text" class="form-control" id="firstName" name="Name" required><br>
    </div>
    <div class="form-group">
        <label for="Surname">Фамилия <span class="error">*</span></label><br>
        <input type="text" class="form-control" id="lastName" name="Surname" required><br>
    </div>
    <div class="form-group">
        <label for="UserName">Логин <span class="error">*</span></label><br>
        <input type="text" class="form-control" id="login" name="UserName" required><br>
    </div>
    <div class="form-group">
        <label for="Password">Пароль <span class="error">*</span></label><br>
        <input type="password" class="form-control" id="password" name="Password" required><br>
    </div>
    <div class="form-group">
        <label for="Patronymic">Отчество</label><br>
        <input type="text" class="form-control" id="middleName" name="Patronymic"><br>
    </div>
    <div class="form-group">
        <label for="PhoneNumber">Номер телефона</label><br>
        <input type="text" class="form-control" id="phoneNumber" name="PhoneNumber"><br>
    </div>
    <div class="form-group">
        <label for="Address">Адрес проживания</label><br>
        <input type="text" class="form-control" id="address" name="Address"><br>
    </div>
    <div class="form-group">
        <label for="Role">Должность <span class="error">*</span></label><br>
        <select class="form-control" id="Role" name="Role" required>
            <option value="">Выберите должность</option>
            @foreach (Role r in roles)
            {
                <option value="@r.Id">@r.Title</option>
            }
        </select><br>
    </div>
    <div class="form-group">
        <label for="Image">Изображение</label><br>
        <input type="file" class="form-control-file" id="image" name="Image"><br>
    </div>
    <br>
    <br>
    <div class="form-group">
        <input type="submit" class="btn btn-primary" value="Создать">
    </div>
</form>

<script>

    function validatePassword(password) {
    const minLength = 8;
        if (password.length >= minLength) {
            return true;
        } else {
            return false;
        }
    }

    function validatePhoneNumber(phoneNumber) {
        const phoneNumberRegex = /^\+7\s?(\d{3})\s?\d{3}[\s-]?\d{2}[\s-]?\d{2}$/;
        return phoneNumberRegex.test(phoneNumber);
    }

    function validateForm() {
        var firstName = document.getElementById("firstName").value;
        var lastName = document.getElementById("lastName").value;
        var login = document.getElementById("login").value;
        var password = document.getElementById("password").value;
        var role = document.getElementById("Role").value;
        var phoneNumber = document.getElementById("phoneNumber").value;

        var errorMessages = [];

        if (!firstName.trim()) {
            errorMessages.push("Введите имя.");
        }
        if (!lastName.trim()) {
            errorMessages.push("Введите фамилию.");
        }
        if (!login.trim()) {
            errorMessages.push("Введите логин.");
        }
        if (!password.trim()) {
            errorMessages.push("Введите пароль.");
        }
        if (!role.trim()) {
            errorMessages.push("Выберите уровень доступа.");
        }

        if(!validatePassword(password))
        {
            errorMessages.push("Пароль должен быть не мнее 8 символов.");
        }

        if (validatePhoneNumber(phoneNumber)) {
            errorMessages.push("Пожалуйства введите номер телефона правильно. Пример номера телефона: '+7 (123) 456-78-90'");
        }

        if (errorMessages.length > 0) {
            errorMessages.forEach(msg => {
                const errorMessageElement = document.createElement('div');
                errorMessageElement.classList.add('error-message');
                errorMessageElement.textContent = msg;
                errorContainer.appendChild(errorMessageElement);
            });
            return false;
        }



        return true;
    }
</script>
