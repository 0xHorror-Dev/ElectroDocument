@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using ElectroDocument.Controllers.Services;

@inject NotificationService NotificationService
@inject IAuthorizationService AuthorizationService

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ElectroDocument</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ElectroDocument.styles.css" asp-append-version="true" />
    <style>
        .nav-item-photo
        {
            max-width: 128px;
            max-height: 128px;
            border-radius: 50%;
        }

        .nav-link-exit
        {
            max-width: 28px;
            max-height: 28px;
            border-radius: 50%;
        }

        .nav-link-notify
        {
            max-width: 28px;
            max-height: 28px;
            border-radius: 50%;
        }


        .notification {
            background-color: white;
            color: white;
            text-decoration: none;
            padding: 2px 2px;
            position: relative;
            display: inline-block;
            border-radius: 50%;
        }

            .notification:hover {
                background: gray;
            }

            .notification .badge {
                position: absolute;
                top: -10px;
                right: -10px;
                padding: 5px 10px;
                border-radius: 50%;
                background-color: blue;
                color: white;
                display: none;
            }?

    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">ElectroDocument</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Главная страница</a>
                        </li>
                        @if (@Context.User.Identity.IsAuthenticated)
                        {
                            var res = await AuthorizationService.AuthorizeAsync(User, "Admin");
                            @if (res.Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Index">Пользователи</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Docs" asp-action="Index">Мои документы</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Role" asp-action="Index">Должности</a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Profile" asp-action="Index">Профиль</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Auth" asp-action="Index">Авторизация</a>
                            </li>
                        }
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Приватность</a>
                        </li>
                    </ul>
                    @if (@Context.User.Identity.IsAuthenticated)
                    {
                        var userClaims = User.Claims;
                        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                        <ul class="navbar-nav ml-auto">
                            <li class="nav-item">
                                <span class="nav-link text-dark">@Context.User.Identity.Name</span> <!-- ФИО пользователя -->
                            </li>

                            <li class="nav-item">
                                <img src="/Profile/Image/@userId" alt="User Photo" class="nav-item-photo"> <!-- Фотография пользователя -->
                            </li>
                            <li class="nav-item">
                                <div class="notification">
                                    <span id="notCount" class="badge">0</span>
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Notification" asp-action="Index">
                                        <img src="https://www.svgrepo.com/download/31480/notification-bell.svg" alt="Notification" class="nav-link-notify nav-item-photo text-dark"> <!-- Уведомления -->
                                    </a>
                                </div>
                            </li>
                            <li class="nav-item">
                                <img src="https://www.svgrepo.com/download/42231/exit.svg" alt="Exit" class="nav-link-exit nav-item-photo text-dark"> <!-- Кнопка выхода -->
                            </li>

                        </ul>
                    }
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - ElectroDocument - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    @if (@Context.User.Identity.IsAuthenticated)
    {
        var userClaims = User.Claims;
        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
        <script>

            async function UpdateNotificationCount() {
                bubble = document.getElementById('notCount');

                try {
                    let response = await fetch("/Notification/GetNotificationCount", {
                        method: "POST",
                        headers: { "Accept": "application/json", "Content-Type": "application/json" },
                        body: JSON.stringify({
                            empId: @userId
                        })
                    });


                    if (response.ok) {
                        let res = await response.json();
                        if (res.count != 0) {
                            bubble.innerHTML = res.count;
                            bubble.style.display = "block";
                        }
                        else {
                        }


                    } else {
                        console.error('Failed to fetch notification count:', response.status);
                    }
                } catch (error) {
                    console.error('Error fetching notification count:', error);
                }
            }

            window.addEventListener("load", async (event) => {
                await UpdateNotificationCount();
                setInterval(UpdateNotificationCount, 10000);
            });
        </script>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
